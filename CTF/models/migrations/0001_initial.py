# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-07-24 08:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('kind', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=100, null=True)),
                ('description', models.CharField(max_length=200)),
                ('hint', models.CharField(max_length=100)),
                ('option0', models.CharField(max_length=200, null=True)),
                ('option1', models.CharField(max_length=200, null=True)),
                ('option2', models.CharField(max_length=200, null=True)),
                ('option3', models.CharField(max_length=200, null=True)),
                ('option4', models.CharField(default=b'null', max_length=200, null=True)),
                ('option5', models.CharField(default=b'null', max_length=200, null=True)),
                ('option6', models.CharField(default=b'null', max_length=200, null=True)),
                ('option7', models.CharField(default=b'null', max_length=200, null=True)),
                ('correction', models.CharField(max_length=30)),
                ('file_path', models.CharField(max_length=100)),
                ('flag_url', models.CharField(max_length=100)),
                ('create_time', models.DateTimeField()),
                ('q_score', models.IntegerField()),
            ],
            options={
                'db_table': 't_challenge',
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('kind', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('hint', models.CharField(max_length=100)),
                ('option0', models.CharField(max_length=200)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('option5', models.CharField(max_length=200)),
                ('option6', models.CharField(max_length=200)),
                ('option7', models.CharField(max_length=200)),
                ('correction', models.CharField(max_length=30)),
                ('file_path', models.CharField(max_length=100)),
                ('flag_url', models.CharField(max_length=100)),
                ('answer_num', models.IntegerField(default=0)),
                ('collections', models.IntegerField(default=0)),
                ('pageview', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_exercise',
            },
        ),
        migrations.CreateModel(
            name='ExerciseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=100)),
                ('answer_time', models.DateTimeField()),
                ('validity', models.BooleanField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Exercise')),
            ],
            options={
                'db_table': 't_exercise_user',
            },
        ),
        migrations.CreateModel(
            name='FriendLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 't_friend_link',
            },
        ),
        migrations.CreateModel(
            name='MatchInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('theme', models.CharField(max_length=200)),
                ('create_time', models.DateTimeField()),
                ('source', models.CharField(max_length=50)),
                ('apply_start_time', models.CharField(max_length=50)),
                ('apply_end_time', models.CharField(max_length=50)),
                ('answer_start_time', models.DateTimeField()),
                ('answer_end_time', models.DateTimeField()),
                ('state', models.BooleanField(default=False)),
                ('organizers', models.CharField(max_length=100)),
                ('rules', models.CharField(max_length=50)),
                ('brief', models.CharField(max_length=1000)),
                ('message', models.CharField(max_length=10000)),
                ('file_path', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 't_match_info',
            },
        ),
        migrations.CreateModel(
            name='MatchNotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('brief', models.CharField(max_length=1000)),
                ('message', models.CharField(max_length=10000)),
                ('file_path', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 't_match_notice',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=100)),
                ('content', models.CharField(max_length=10000)),
                ('create_time', models.DateTimeField()),
                ('pageview', models.IntegerField(default=0)),
                ('remark', models.CharField(max_length=200)),
                ('priority', models.IntegerField(default=99)),
                ('state', models.BooleanField()),
                ('pic', models.CharField(max_length=100)),
                ('file', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 't_news',
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=100)),
                ('accessory', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 't_sponsor',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('desc', models.CharField(max_length=200, null=True)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 't_team',
            },
        ),
        migrations.CreateModel(
            name='TeamChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, null=True)),
                ('answer_time', models.DateTimeField()),
                ('Team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Team')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Challenge')),
            ],
            options={
                'db_table': 't_team_challenge',
            },
        ),
        migrations.CreateModel(
            name='TeamMatchInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, null=True)),
                ('join_time', models.DateTimeField()),
                ('match_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.MatchInfo')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Team')),
            ],
            options={
                'db_table': 't_team_match_info',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=20)),
                ('user_pwd', models.CharField(max_length=16)),
                ('user_nickname', models.CharField(max_length=20, null=True)),
                ('user_auto', models.CharField(max_length=200, null=True)),
                ('real_name', models.CharField(max_length=20, null=True)),
                ('user_sex', models.IntegerField(default=0, null=True)),
                ('user_cardnum', models.CharField(max_length=18, null=True)),
                ('user_education', models.CharField(max_length=5, null=True)),
                ('user_area', models.CharField(max_length=20, null=True)),
                ('user_address', models.CharField(max_length=50, null=True)),
                ('user_state', models.IntegerField(default=0, null=True)),
                ('user_pic', models.CharField(max_length=100, null=True)),
                ('num_flags', models.IntegerField(default=0)),
                ('theoretical_value', models.IntegerField(default=0)),
                ('achievement_flags', models.IntegerField(default=0)),
                ('card_count', models.IntegerField(default=0)),
                ('num_contribution', models.IntegerField(default=0)),
                ('num_fans', models.IntegerField(default=0)),
                ('user_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Team')),
            ],
            options={
                'db_table': 't_user',
            },
        ),
        migrations.CreateModel(
            name='UserChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, null=True)),
                ('answer_time', models.DateTimeField()),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.Challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.User')),
            ],
            options={
                'db_table': 't_user_challenge',
            },
        ),
        migrations.CreateModel(
            name='UserMatchInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, null=True)),
                ('join_time', models.DateTimeField()),
                ('match_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.MatchInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.User')),
            ],
            options={
                'db_table': 't_user_match_info',
            },
        ),
        migrations.AddField(
            model_name='exerciseuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.User'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.MatchInfo'),
        ),
    ]
